/* This file was generated by SableCC (http://www.sablecc.org/). */

package fr.umlv.symphonie.data.formula.node;

import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;

import fr.umlv.symphonie.data.formula.analysis.Analysis;

public final class AIdentifiers extends PIdentifiers {

  private final LinkedList _separatorSuffixedId_ = new TypedLinkedList(
      new SeparatorSuffixedId_Cast());
  private TIdentifier _identifier_;

  public AIdentifiers() {
  }

  public AIdentifiers(List _separatorSuffixedId_, TIdentifier _identifier_) {
    {
      this._separatorSuffixedId_.clear();
      this._separatorSuffixedId_.addAll(_separatorSuffixedId_);
    }

    setIdentifier(_identifier_);

  }

  public AIdentifiers(XPSeparatorSuffixedId _separatorSuffixedId_,
      TIdentifier _identifier_) {
    if (_separatorSuffixedId_ != null) {
      while (_separatorSuffixedId_ instanceof X1PSeparatorSuffixedId) {
        this._separatorSuffixedId_
            .addFirst(((X1PSeparatorSuffixedId) _separatorSuffixedId_)
                .getPSeparatorSuffixedId());
        _separatorSuffixedId_ = ((X1PSeparatorSuffixedId) _separatorSuffixedId_)
            .getXPSeparatorSuffixedId();
      }
      this._separatorSuffixedId_
          .addFirst(((X2PSeparatorSuffixedId) _separatorSuffixedId_)
              .getPSeparatorSuffixedId());
    }

    setIdentifier(_identifier_);

  }

  public Object clone() {
    return new AIdentifiers(cloneList(_separatorSuffixedId_),
        (TIdentifier) cloneNode(_identifier_));
  }

  public void apply(Switch sw) {
    ((Analysis) sw).caseAIdentifiers(this);
  }

  public LinkedList getSeparatorSuffixedId() {
    return _separatorSuffixedId_;
  }

  public void setSeparatorSuffixedId(List list) {
    _separatorSuffixedId_.clear();
    _separatorSuffixedId_.addAll(list);
  }

  public TIdentifier getIdentifier() {
    return _identifier_;
  }

  public void setIdentifier(TIdentifier node) {
    if (_identifier_ != null) {
      _identifier_.parent(null);
    }

    if (node != null) {
      if (node.parent() != null) {
        node.parent().removeChild(node);
      }

      node.parent(this);
    }

    _identifier_ = node;
  }

  public String toString() {
    return "" + toString(_separatorSuffixedId_) + toString(_identifier_);
  }

  void removeChild(Node child) {
    if (_separatorSuffixedId_.remove(child)) {
      return;
    }

    if (_identifier_ == child) {
      _identifier_ = null;
      return;
    }

  }

  void replaceChild(Node oldChild, Node newChild) {
    for (ListIterator i = _separatorSuffixedId_.listIterator(); i.hasNext();) {
      if (i.next() == oldChild) {
        if (newChild != null) {
          i.set(newChild);
          oldChild.parent(null);
          return;
        }

        i.remove();
        oldChild.parent(null);
        return;
      }
    }

    if (_identifier_ == oldChild) {
      setIdentifier((TIdentifier) newChild);
      return;
    }

  }

  private class SeparatorSuffixedId_Cast implements Cast {

    public Object cast(Object o) {
      PSeparatorSuffixedId node = (PSeparatorSuffixedId) o;

      if ((node.parent() != null) && (node.parent() != AIdentifiers.this)) {
        node.parent().removeChild(node);
      }

      if ((node.parent() == null) || (node.parent() != AIdentifiers.this)) {
        node.parent(AIdentifiers.this);
      }

      return node;
    }
  }
}
