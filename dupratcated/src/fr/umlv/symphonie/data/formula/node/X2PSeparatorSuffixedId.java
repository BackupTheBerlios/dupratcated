/* This file was generated by SableCC (http://www.sablecc.org/). */

package fr.umlv.symphonie.data.formula.node;

public final class X2PSeparatorSuffixedId extends XPSeparatorSuffixedId {

  private PSeparatorSuffixedId _pSeparatorSuffixedId_;

  public X2PSeparatorSuffixedId() {
  }

  public X2PSeparatorSuffixedId(PSeparatorSuffixedId _pSeparatorSuffixedId_) {
    setPSeparatorSuffixedId(_pSeparatorSuffixedId_);
  }

  public Object clone() {
    throw new RuntimeException("Unsupported Operation");
  }

  public void apply(Switch sw) {
    throw new RuntimeException("Switch not supported.");
  }

  public PSeparatorSuffixedId getPSeparatorSuffixedId() {
    return _pSeparatorSuffixedId_;
  }

  public void setPSeparatorSuffixedId(PSeparatorSuffixedId node) {
    if (_pSeparatorSuffixedId_ != null) {
      _pSeparatorSuffixedId_.parent(null);
    }

    if (node != null) {
      if (node.parent() != null) {
        node.parent().removeChild(node);
      }

      node.parent(this);
    }

    _pSeparatorSuffixedId_ = node;
  }

  void removeChild(Node child) {
    if (_pSeparatorSuffixedId_ == child) {
      _pSeparatorSuffixedId_ = null;
    }
  }

  void replaceChild(Node oldChild, Node newChild) {
  }

  public String toString() {
    return "" + toString(_pSeparatorSuffixedId_);
  }
}
