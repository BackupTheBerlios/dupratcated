/* This file was generated by SableCC (http://www.sablecc.org/). */

package fr.umlv.symphonie.data.formula.node;

import fr.umlv.symphonie.data.formula.analysis.Analysis;

public final class ABooleanExpression extends PExpression {

  private PLogicalOrExpression _logicalOrExpression_;

  public ABooleanExpression() {
  }

  public ABooleanExpression(PLogicalOrExpression _logicalOrExpression_) {
    setLogicalOrExpression(_logicalOrExpression_);

  }

  public Object clone() {
    return new ABooleanExpression(
        (PLogicalOrExpression) cloneNode(_logicalOrExpression_));
  }

  public void apply(Switch sw) {
    ((Analysis) sw).caseABooleanExpression(this);
  }

  public PLogicalOrExpression getLogicalOrExpression() {
    return _logicalOrExpression_;
  }

  public void setLogicalOrExpression(PLogicalOrExpression node) {
    if (_logicalOrExpression_ != null) {
      _logicalOrExpression_.parent(null);
    }

    if (node != null) {
      if (node.parent() != null) {
        node.parent().removeChild(node);
      }

      node.parent(this);
    }

    _logicalOrExpression_ = node;
  }

  public String toString() {
    return "" + toString(_logicalOrExpression_);
  }

  void removeChild(Node child) {
    if (_logicalOrExpression_ == child) {
      _logicalOrExpression_ = null;
      return;
    }

  }

  void replaceChild(Node oldChild, Node newChild) {
    if (_logicalOrExpression_ == oldChild) {
      setLogicalOrExpression((PLogicalOrExpression) newChild);
      return;
    }

  }
}
